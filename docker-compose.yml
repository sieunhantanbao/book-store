version: '3.7'

services:
  mypostgres:
    image: postgres:latest
    container_name: mypostgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  book-store:
    build: 
      context: .
      dockerfile: Dockerfile
    image: sieunhantanbao/book-store:latest
    container_name: book-store
    restart: unless-stopped
    environment:
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - ALLOWED_EXTENSIONS=${ALLOWED_EXTENSIONS}
      - DB_ENGINE=${DB_ENGINE}
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DEFAULT_PASSWORD=${DEFAULT_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
    depends_on:
      - mypostgres
      - migration
    ports:
      - "5001:5000"
    networks:
      - app-network
    command: sh -c "flask run --host 10.255.17.70 --port 5001"

  migration:
    build: 
      context: .
      dockerfile: Dockerfile
    image: sieunhantanbao/book-store-migration:latest
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    command: sh -c "/app/wait-for-postgres.sh && alembic upgrade head"
    depends_on:
      - mypostgres
    networks:
      - app-network

networks:
  app-network:

volumes:
  postgres-data:
